package Lab2_1;

import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.Queue;

public class BreadthFirstSearchAlgo {
	public void execute(Node root, int goal) {
		if (root.getState() == goal) {
			System.out.println(root.getState());
			return;
		}
		Map<Integer, Integer> map = new HashMap<>();
		Queue<Node> frontier = new LinkedList<>();
		frontier.add(root);
		root.setVisited(true);
		while (!frontier.isEmpty()) {
			Node node = frontier.poll();
			for (Node child : node.getNeighbours()) {
				if (!child.isVisited()) {
					map.put(child.getState(), node.getState());
					node.setVisited(true);
					if (child.getState() == goal) {
						System.out.println(NodeUtils.printPath(child, map));
						return;
					}
					frontier.add(child);
//	                    parents.put(child, node);
				}
			}
		}
		return;
	}
}
