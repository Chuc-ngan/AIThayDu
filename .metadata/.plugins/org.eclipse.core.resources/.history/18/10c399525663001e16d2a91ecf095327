package Lab2;

import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;

public class BreadthFirstSearchAlgo implements ISearchAlgo {

	@Override
	public Node execute(Node root, String goal) {
		if(root.getLabel().equals(goal)) {
			return root;
		}
		Queue<Node> frontier  = new LinkedList<>();
		frontier.add(root);
		Set<Node> explored = new HashSet<>();
		explored.add(root);
        Map<Node, Node> parents = new HashMap<>();
		
		while (!frontier.isEmpty()) {
			Node node = frontier.poll();
			  for (Node child: node.getChildrenNodes()) {
	                if (!explored.contains(child)) {
	                    frontier.add(child);
	                    parents.put(child, node);
	                }
	            }
		}
		return null;
	}

	@Override
	public Node execute(Node root, String start, String goal) {
		// TODO Auto-generated method stub
		return null;
	}

}
